{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyMWGt87IO44WADNoo2rPzB5"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["!pip install matplotlib"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"YVOueSDfGTYg","executionInfo":{"status":"ok","timestamp":1710387079113,"user_tz":-330,"elapsed":7786,"user":{"displayName":"Mystic Sniper","userId":"01847572780805803104"}},"outputId":"cb96dfab-8a34-47b7-bb57-d91c7b9cfe06"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: matplotlib in /usr/local/lib/python3.10/dist-packages (3.7.1)\n","Requirement already satisfied: contourpy>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib) (1.2.0)\n","Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.10/dist-packages (from matplotlib) (0.12.1)\n","Requirement already satisfied: fonttools>=4.22.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib) (4.49.0)\n","Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib) (1.4.5)\n","Requirement already satisfied: numpy>=1.20 in /usr/local/lib/python3.10/dist-packages (from matplotlib) (1.25.2)\n","Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib) (24.0)\n","Requirement already satisfied: pillow>=6.2.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib) (9.4.0)\n","Requirement already satisfied: pyparsing>=2.3.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib) (3.1.2)\n","Requirement already satisfied: python-dateutil>=2.7 in /usr/local/lib/python3.10/dist-packages (from matplotlib) (2.8.2)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.10/dist-packages (from python-dateutil>=2.7->matplotlib) (1.16.0)\n"]}]},{"cell_type":"code","execution_count":3,"metadata":{"id":"VDH2Cg7KChh6","executionInfo":{"status":"ok","timestamp":1710387084190,"user_tz":-330,"elapsed":5080,"user":{"displayName":"Mystic Sniper","userId":"01847572780805803104"}}},"outputs":[],"source":["import matplotlib.pyplot as plt\n","import numpy as np\n","\n","import torch\n","import torch.nn.functional as Func"]},{"cell_type":"code","source":["df = np.genfromtxt('dataset/toydata.txt', delimiter='\\t')\n","X = df[:, :2].astype(np.float32)\n","y = df[:, 2].astype(np.int64)"],"metadata":{"id":"BuM9-Jw-GJWw","executionInfo":{"status":"ok","timestamp":1710387084190,"user_tz":-330,"elapsed":23,"user":{"displayName":"Mystic Sniper","userId":"01847572780805803104"}}},"execution_count":4,"outputs":[]},{"cell_type":"code","source":["size = X.shape[0]\n","\n","size"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"aV2EH7Z_GQu-","executionInfo":{"status":"ok","timestamp":1710387084190,"user_tz":-330,"elapsed":22,"user":{"displayName":"Mystic Sniper","userId":"01847572780805803104"}},"outputId":"b790d8e0-9c8a-45ca-9b3f-622a74b7dc00"},"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/plain":["100"]},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["ind = np.arange(size)\n","ind"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"WcxnhI6nHCvb","executionInfo":{"status":"ok","timestamp":1710387084190,"user_tz":-330,"elapsed":20,"user":{"displayName":"Mystic Sniper","userId":"01847572780805803104"}},"outputId":"c19595ea-c752-4a17-c1df-18f104dffecd"},"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16,\n","       17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33,\n","       34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50,\n","       51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67,\n","       68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84,\n","       85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99])"]},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["np.random.seed(123)\n","np.random.shuffle(ind)"],"metadata":{"id":"VIgZpKZYHPp-","executionInfo":{"status":"ok","timestamp":1710387084191,"user_tz":-330,"elapsed":19,"user":{"displayName":"Mystic Sniper","userId":"01847572780805803104"}}},"execution_count":7,"outputs":[]},{"cell_type":"code","source":["ind"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RgHMXfapHgvZ","executionInfo":{"status":"ok","timestamp":1710387084191,"user_tz":-330,"elapsed":19,"user":{"displayName":"Mystic Sniper","userId":"01847572780805803104"}},"outputId":"0a7f108a-235a-4f96-f4ce-31eeda522a3a"},"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([ 8, 70, 82, 28, 63,  0,  5, 50, 81,  4, 23, 65, 76, 60, 24, 42, 77,\n","       38, 56, 75, 35, 88, 19, 29, 31, 91, 85,  9, 53, 41, 21, 90, 33, 69,\n","       84, 87, 95, 97, 62, 12, 20, 89, 37, 59,  1, 74, 11, 79, 14, 54, 16,\n","       26, 51, 45,  6, 98, 30, 44, 72, 43, 15, 94, 18, 13, 22, 10, 58, 71,\n","       64,  3, 40, 34, 27, 52,  7, 48, 61, 93, 99, 39,  2, 67, 55, 49, 68,\n","       80, 36, 78, 96, 25, 46, 32, 73, 47, 86, 57, 83, 17, 92, 66])"]},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["Xtest = torch.Tensor(X[ind[:25]])\n","yTest = torch.Tensor(y[ind[:25]])\n","Xtrain = torch.Tensor(X[ind[25:]])\n","yTrain = torch.Tensor(y[ind[25:]])\n"],"metadata":{"id":"qH-6qdzVHiR4","executionInfo":{"status":"ok","timestamp":1710387084191,"user_tz":-330,"elapsed":18,"user":{"displayName":"Mystic Sniper","userId":"01847572780805803104"}}},"execution_count":9,"outputs":[]},{"cell_type":"code","source":["Mean = Xtrain.mean(dim=0)\n","std = Xtrain.std(dim=0)\n","Xtrain = (Xtrain-Mean)/std\n","Xtest = (Xtest-Mean)/std"],"metadata":{"id":"xKNEdQF-_jud","executionInfo":{"status":"ok","timestamp":1710387084191,"user_tz":-330,"elapsed":17,"user":{"displayName":"Mystic Sniper","userId":"01847572780805803104"}}},"execution_count":10,"outputs":[]},{"cell_type":"code","source":["class logisticneuron:\n","\n","  def __init__(self,numNeuron):\n","    self.num = numNeuron\n","    self.weights = torch.zeros(numNeuron,1,dtype=torch.float32)\n","    self.bias = torch.zeros(1,dtype=torch.float32)\n","\n","  def sigmoid(self,X):\n","    ans = 1/(1+(torch.exp(-X)))\n","    return ans\n","\n","  def predict(self,X):\n","    wTX = torch.add(torch.matmul(X,self.weights),self.bias)\n","    return (self.sigmoid(wTX))\n","\n","  def loss(self,y,yhat):\n","    part1 = y\n","    part1 = part1 * torch.log(yhat)\n","    part2 = 1-y\n","    part2 = part2 * torch.log(1-yhat)\n","    res = -(part1+part2)\n","    return res\n","\n","  def back(self,X,y,yhat):\n","    loss = (yhat-y)\n","    backweight = torch.matmul(X.t(),loss)/y.size(0)\n","    backbias = torch.sum(1. * loss)/y.size(0)\n","    return backweight,backbias\n","\n","  def evaluate(self, pred, yExp):\n","        pred = torch.where(pred >= .5, 1, 0)\n","        accuracy = 1-(torch.sum(torch.abs(pred-yExp)).item() / pred.size(0))\n","        return accuracy\n","\n","  def train(self,X,y,epoch):\n","    cost = []\n","    accu =[]\n","    for i in range(epoch):\n","      pred = self.predict(X)\n","      loss = self.loss(y,pred)\n","      cost.append(torch.sum(1. * loss)/y.size(0))\n","      accu.append(self.evaluate(pred,y))\n","      bW,bB = self.back(X,y,pred)\n","      self.weights -=0.1*bW\n","      self.bias -=0.1*bB\n","    print(accu)\n","\n","    return cost"],"metadata":{"id":"5efJC7LLH5dU","executionInfo":{"status":"ok","timestamp":1710387084191,"user_tz":-330,"elapsed":17,"user":{"displayName":"Mystic Sniper","userId":"01847572780805803104"}}},"execution_count":11,"outputs":[]},{"cell_type":"code","source":["yTrain.shape\n","y_Train = yTrain[None,:].t()\n","y_Test = yTest[None,:].t()\n","y_Train.shape,y_Test.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"s3DGlc2nOd61","executionInfo":{"status":"ok","timestamp":1710387084192,"user_tz":-330,"elapsed":18,"user":{"displayName":"Mystic Sniper","userId":"01847572780805803104"}},"outputId":"999f3e15-0f1d-493d-c92d-a46c51359e01"},"execution_count":12,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(torch.Size([75, 1]), torch.Size([25, 1]))"]},"metadata":{},"execution_count":12}]},{"cell_type":"code","source":["m = logisticneuron(2)"],"metadata":{"id":"x48HujPmIa5u","executionInfo":{"status":"ok","timestamp":1710387084192,"user_tz":-330,"elapsed":16,"user":{"displayName":"Mystic Sniper","userId":"01847572780805803104"}}},"execution_count":13,"outputs":[]},{"cell_type":"code","source":["LforLoss = m.train(Xtrain,y_Train,30)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xHzD1EVgO3TJ","executionInfo":{"status":"ok","timestamp":1710387084192,"user_tz":-330,"elapsed":16,"user":{"displayName":"Mystic Sniper","userId":"01847572780805803104"}},"outputId":"bbe06dd9-a4e6-4cc9-d984-741e3f896e9d"},"execution_count":14,"outputs":[{"output_type":"stream","name":"stdout","text":["[0.5066666666666666, 0.9733333333333334, 0.9733333333333334, 0.9733333333333334, 0.9733333333333334, 0.9733333333333334, 0.9733333333333334, 0.9733333333333334, 0.9733333333333334, 0.9733333333333334, 0.9733333333333334, 0.9733333333333334, 0.9733333333333334, 0.9733333333333334, 0.9733333333333334, 0.9733333333333334, 0.9733333333333334, 0.9733333333333334, 0.9733333333333334, 0.9733333333333334, 0.9733333333333334, 0.9733333333333334, 0.9733333333333334, 0.9733333333333334, 0.9733333333333334, 0.9733333333333334, 0.9733333333333334, 0.9733333333333334, 0.9733333333333334, 0.9733333333333334]\n"]}]},{"cell_type":"code","source":["pred = torch.where( m.predict(Xtrain)>= .5, 1, 0)"],"metadata":{"id":"vD-R2D9OJtP8","executionInfo":{"status":"ok","timestamp":1710387084192,"user_tz":-330,"elapsed":15,"user":{"displayName":"Mystic Sniper","userId":"01847572780805803104"}}},"execution_count":15,"outputs":[]},{"cell_type":"code","source":["y_Train-pred"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"V_GXLNwW-ux9","executionInfo":{"status":"ok","timestamp":1710387084192,"user_tz":-330,"elapsed":15,"user":{"displayName":"Mystic Sniper","userId":"01847572780805803104"}},"outputId":"7b14e4b7-c1e9-46e5-e7a7-ad34910c2019"},"execution_count":16,"outputs":[{"output_type":"execute_result","data":{"text/plain":["tensor([[ 0.],\n","        [ 0.],\n","        [ 0.],\n","        [ 0.],\n","        [ 0.],\n","        [ 0.],\n","        [ 0.],\n","        [ 0.],\n","        [ 0.],\n","        [ 0.],\n","        [ 0.],\n","        [ 0.],\n","        [ 0.],\n","        [ 0.],\n","        [ 0.],\n","        [ 0.],\n","        [ 0.],\n","        [ 0.],\n","        [ 0.],\n","        [-1.],\n","        [ 0.],\n","        [ 0.],\n","        [ 0.],\n","        [-1.],\n","        [ 0.],\n","        [ 0.],\n","        [ 0.],\n","        [ 0.],\n","        [ 0.],\n","        [ 0.],\n","        [ 0.],\n","        [ 0.],\n","        [ 0.],\n","        [ 0.],\n","        [ 0.],\n","        [ 0.],\n","        [ 0.],\n","        [ 0.],\n","        [ 0.],\n","        [ 0.],\n","        [ 0.],\n","        [ 0.],\n","        [ 0.],\n","        [ 0.],\n","        [ 0.],\n","        [ 0.],\n","        [ 0.],\n","        [ 0.],\n","        [ 0.],\n","        [ 0.],\n","        [ 0.],\n","        [ 0.],\n","        [ 0.],\n","        [ 0.],\n","        [ 0.],\n","        [ 0.],\n","        [ 0.],\n","        [ 0.],\n","        [ 0.],\n","        [ 0.],\n","        [ 0.],\n","        [ 0.],\n","        [ 0.],\n","        [ 0.],\n","        [ 0.],\n","        [ 0.],\n","        [ 0.],\n","        [ 0.],\n","        [ 0.],\n","        [ 0.],\n","        [ 0.],\n","        [ 0.],\n","        [ 0.],\n","        [ 0.],\n","        [ 0.]])"]},"metadata":{},"execution_count":16}]},{"cell_type":"code","source":["m.predict(Xtrain)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"SCynbtUL-rgh","executionInfo":{"status":"ok","timestamp":1710387084192,"user_tz":-330,"elapsed":13,"user":{"displayName":"Mystic Sniper","userId":"01847572780805803104"}},"outputId":"b44a1f5f-78ce-495c-ab9c-2e751d3da57d"},"execution_count":17,"outputs":[{"output_type":"execute_result","data":{"text/plain":["tensor([[0.5537],\n","        [0.8332],\n","        [0.1702],\n","        [0.6885],\n","        [0.1375],\n","        [0.2297],\n","        [0.6463],\n","        [0.1325],\n","        [0.7216],\n","        [0.8455],\n","        [0.7443],\n","        [0.6987],\n","        [0.7868],\n","        [0.7114],\n","        [0.2809],\n","        [0.0758],\n","        [0.7384],\n","        [0.1881],\n","        [0.8464],\n","        [0.5513],\n","        [0.6417],\n","        [0.2195],\n","        [0.6564],\n","        [0.5259],\n","        [0.9123],\n","        [0.0637],\n","        [0.1061],\n","        [0.7476],\n","        [0.2819],\n","        [0.2880],\n","        [0.8491],\n","        [0.1400],\n","        [0.2088],\n","        [0.9101],\n","        [0.2992],\n","        [0.2552],\n","        [0.8114],\n","        [0.4573],\n","        [0.1988],\n","        [0.1450],\n","        [0.0975],\n","        [0.8108],\n","        [0.8119],\n","        [0.8255],\n","        [0.2797],\n","        [0.1898],\n","        [0.1502],\n","        [0.2431],\n","        [0.8099],\n","        [0.2777],\n","        [0.3839],\n","        [0.8508],\n","        [0.6965],\n","        [0.9150],\n","        [0.1903],\n","        [0.2879],\n","        [0.7687],\n","        [0.8939],\n","        [0.2545],\n","        [0.7880],\n","        [0.8420],\n","        [0.2025],\n","        [0.7692],\n","        [0.6848],\n","        [0.1727],\n","        [0.3182],\n","        [0.1929],\n","        [0.7788],\n","        [0.3058],\n","        [0.7787],\n","        [0.7970],\n","        [0.5804],\n","        [0.1950],\n","        [0.7021],\n","        [0.7251]])"]},"metadata":{},"execution_count":17}]},{"cell_type":"code","source":["m.evaluate(m.predict(Xtrain),y_Train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Um2sCIOnAcP5","executionInfo":{"status":"ok","timestamp":1710387084193,"user_tz":-330,"elapsed":12,"user":{"displayName":"Mystic Sniper","userId":"01847572780805803104"}},"outputId":"7f2c3f28-7fb2-44b1-f848-3d8aa91dbee9"},"execution_count":18,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.9733333333333334"]},"metadata":{},"execution_count":18}]},{"cell_type":"code","source":["m.evaluate(m.predict(Xtest),y_Test)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dhGy2wDeP2Kz","executionInfo":{"status":"ok","timestamp":1710387084193,"user_tz":-330,"elapsed":10,"user":{"displayName":"Mystic Sniper","userId":"01847572780805803104"}},"outputId":"d512cc35-4309-4b71-d805-0930c7fc132c"},"execution_count":19,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.96"]},"metadata":{},"execution_count":19}]},{"cell_type":"code","source":["yTrain.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"FYqQMr1H9F0Q","executionInfo":{"status":"ok","timestamp":1710387084193,"user_tz":-330,"elapsed":9,"user":{"displayName":"Mystic Sniper","userId":"01847572780805803104"}},"outputId":"f26db74b-d6c6-45eb-943e-5f868575d1de"},"execution_count":20,"outputs":[{"output_type":"execute_result","data":{"text/plain":["torch.Size([75])"]},"metadata":{},"execution_count":20}]},{"cell_type":"code","source":["w, b = m.weights.view(-1), m.bias\n","\n","x_min = -2\n","y_min = ( (-(w[0] * x_min) - b[0])\n","          / w[1] )\n","\n","x_max = 2\n","y_max = ( (-(w[0] * x_max) - b[0])\n","          / w[1] )\n","\n","\n","fig, ax = plt.subplots(1, 2, sharex=True, figsize=(7, 3))\n","\n","ax[0].plot([x_min, x_max], [y_min, y_max])\n","ax[1].plot([x_min, x_max], [y_min, y_max])\n","\n","ax[0].scatter(X[ind[:25]][y[ind[:25]]==0, 0], X[ind[:25]][y[ind[:25]]==0, 1], label='class 0', marker='o')\n","ax[0].scatter(X[ind[:25]][y[ind[:25]]==1, 0], X[ind[:25]][y[ind[:25]]==1, 1], label='class 1', marker='s')\n","\n","ax[1].scatter(X[ind[25:]][y[ind[25:]]==0, 0], X[ind[25:]][y[ind[25:]]==0, 1], label='class 0', marker='o')\n","ax[1].scatter(X[ind[25:]][y[ind[25:]]==1, 0], X[ind[25:]][y[ind[25:]]==1, 1], label='class 1', marker='s')\n","\n","ax[1].legend(loc='upper left')\n","plt.show()"],"metadata":{"id":"H5qS6sJ5MLkJ","executionInfo":{"status":"ok","timestamp":1710387433347,"user_tz":-330,"elapsed":1452,"user":{"displayName":"Mystic Sniper","userId":"01847572780805803104"}},"colab":{"base_uri":"https://localhost:8080/","height":291},"outputId":"1b24f381-20fd-44b6-af16-08b00fc9d1a4"},"execution_count":25,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 700x300 with 2 Axes>"],"image/png":"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\n"},"metadata":{}}]},{"cell_type":"code","source":[],"metadata":{"id":"bzdCUORJMMRP","executionInfo":{"status":"ok","timestamp":1710387084193,"user_tz":-330,"elapsed":8,"user":{"displayName":"Mystic Sniper","userId":"01847572780805803104"}}},"execution_count":20,"outputs":[]}]}